{"code":"export {};\n//# sourceMappingURL=mnee.types.js.map","references":[],"map":"{\"version\":3,\"file\":\"mnee.types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/mnee.types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/Users/danwagner/Desktop/Code/mnee-ops/dist/mnee/mnee.types.d.ts","writeByteOrderMark":false,"text":"export type MNEEFee = {\n    min: number;\n    max: number;\n    fee: number;\n};\nexport type MNEEConfig = {\n    approver: string;\n    feeAddress: string;\n    burnAddress: string;\n    mintAddress: string;\n    fees: MNEEFee[];\n    decimals: number;\n    tokenId: string;\n};\nexport type MNEEOperation = 'transfer' | 'burn' | 'deploy+mint';\nexport type MNEEUtxo = {\n    data: {\n        bsv21: {\n            amt: number;\n            dec: number;\n            icon: string;\n            id: string;\n            op: string;\n            sym: string;\n        };\n        cosign: {\n            address: string;\n            cosigner: string;\n        };\n    };\n    height: number;\n    idx: number;\n    outpoint: string;\n    owners: string[];\n    satoshis: number;\n    score: number;\n    script: string;\n    txid: string;\n    vout: number;\n};\nexport type SignatureRequest = {\n    prevTxid: string;\n    outputIndex: number;\n    inputIndex: number;\n    satoshis: number;\n    address: string | string[];\n    script?: string;\n    sigHashType?: number;\n    csIdx?: number;\n    data?: unknown;\n};\nexport type TransactionFormat = 'tx' | 'beef' | 'ef';\nexport type MNEEBalance = {\n    amount: number;\n    decimalAmount: number;\n};\nexport type SendMNEE = {\n    address: string;\n    amount: number;\n};\nexport type GetSignatures = {\n    rawtx: string;\n    sigRequests: SignatureRequest[];\n    format?: TransactionFormat;\n};\nexport type SignatureResponse = {\n    inputIndex: number;\n    sig: string;\n    pubKey: string;\n    sigHashType: number;\n    csIdx?: number;\n};\nexport type GorillaPoolErrorMessage = {\n    message: string;\n};\nexport type GorillaPoolBroadcastResponse = {\n    txid?: string;\n    message?: string;\n};\nexport type MneeInscription = {\n    p: string;\n    op: string;\n    id: string;\n    amt: string;\n};\nexport type ParsedCosigner = {\n    cosigner: string;\n    address: string;\n};\nexport interface File {\n    hash: string;\n    size: number;\n    type: string;\n    content: number[];\n}\nexport interface Inscription {\n    file?: File;\n    fields?: {\n        [key: string]: any;\n    };\n    parent?: string;\n}\nexport type TransferResponse = {\n    txid?: string;\n    rawtx?: string;\n    error?: string;\n};\n"}}
