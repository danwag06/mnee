import{Utils as t,LockingScript as e,OP as r,TransactionSignature as o,Hash as n,UnlockingScript as s,PublicKey as i,Transaction as a,Script as c,P2PKH as u,PrivateKey as d}from"@bsv/sdk";import*as p from"js-1sat-ord";class l{lock(o,n){let s=[];if("string"==typeof o){const e=t.fromBase58Check(o);if(0!==e.prefix[0]&&111!==e.prefix[0])throw new Error("only P2PKH is supported");s=e.data}else s=o;const i=new e;return i.writeOpCode(r.OP_DUP).writeOpCode(r.OP_HASH160).writeBin(s).writeOpCode(r.OP_EQUALVERIFY).writeOpCode(r.OP_CHECKSIGVERIFY).writeBin(n.encode(!0)).writeOpCode(r.OP_CHECKSIG),i}userUnlock(t,e="all",r=!1,i,a){return{sign:async function(c,u){var d,p,l;let f=o.SIGHASH_FORKID;"all"===e&&(f|=o.SIGHASH_ALL),"none"===e&&(f|=o.SIGHASH_NONE),"single"===e&&(f|=o.SIGHASH_SINGLE),r&&(f|=o.SIGHASH_ANYONECANPAY);const h=c.inputs[u],g=c.inputs.filter((t,e)=>e!==u),w=h.sourceTXID?h.sourceTXID:null==(d=h.sourceTransaction)?void 0:d.id("hex");if(!w)throw new Error("The input sourceTXID or sourceTransaction is required for transaction signing.");if(i||(i=null==(p=h.sourceTransaction)?void 0:p.outputs[h.sourceOutputIndex].satoshis),!i)throw new Error("The sourceSatoshis or input sourceTransaction is required for transaction signing.");if(a||(a=null==(l=h.sourceTransaction)?void 0:l.outputs[h.sourceOutputIndex].lockingScript),!a)throw new Error("The lockingScript or input sourceTransaction is required for transaction signing.");const m=o.format({sourceTXID:w,sourceOutputIndex:h.sourceOutputIndex,sourceSatoshis:i,transactionVersion:c.version,otherInputs:g,inputIndex:u,outputs:c.outputs,inputSequence:h.sequence||4294967295,subscript:a,lockTime:c.lockTime,scope:f}),I=t.sign(n.sha256(m)),T=new o(I.r,I.s,f),S=new s;return S.writeBin(T.toChecksigFormat()),S.writeBin(t.toPublicKey().encode(!0)),S},estimateLength:async function(){return 182}}}unlock(t,e,r="all",i=!1,a,c){return{sign:async function(u,d){var p,l,f;let h=o.SIGHASH_FORKID;"all"===r&&(h|=o.SIGHASH_ALL),"none"===r&&(h|=o.SIGHASH_NONE),"single"===r&&(h|=o.SIGHASH_SINGLE),i&&(h|=o.SIGHASH_ANYONECANPAY);const g=u.inputs[d],w=u.inputs.filter((t,e)=>e!==d),m=g.sourceTXID?g.sourceTXID:null==(p=g.sourceTransaction)?void 0:p.id("hex");if(!m)throw new Error("The input sourceTXID or sourceTransaction is required for transaction signing.");if(a||(a=null==(l=g.sourceTransaction)?void 0:l.outputs[g.sourceOutputIndex].satoshis),!a)throw new Error("The sourceSatoshis or input sourceTransaction is required for transaction signing.");if(c||(c=null==(f=g.sourceTransaction)?void 0:f.outputs[g.sourceOutputIndex].lockingScript),!c)throw new Error("The lockingScript or input sourceTransaction is required for transaction signing.");const I=o.format({sourceTXID:m,sourceOutputIndex:g.sourceOutputIndex,sourceSatoshis:a,transactionVersion:u.version,otherInputs:w,inputIndex:d,outputs:u.outputs,inputSequence:g.sequence||4294967295,subscript:c,lockTime:u.lockTime,scope:h}),T=t.sign(n.sha256(I)),S=new o(T.r,T.s,h),E=new s;return E.writeBin(S.toChecksigFormat()),E.writeScript(e),E},estimateLength:async function(){return 182}}}}class f{constructor(t){this.MNEE_TOKEN_ID="ae59f3b898ec61acbdb6cc7a245fabeded0c094bf046f35206a3aec60ef88127_0",this.MNEE_COSIGNER_PROD="020a177d6a5e6f3a8689acd2e313bd1cf0dcf5a243d1cc67b7218602aee9e04b2f",this.MNEE_DECIMALS=5,this.mneeApiToken="92982ec1c0975f31979da515d46bae9f",this.mneeApi="https://proxy-api.mnee.net",this.gorillaPoolApi="https://ordinals.1sat.app",t&&(this.mneeApiToken=t)}async getConfig(){try{const t=await fetch(`${this.mneeApi}/v1/config?auth_token=${this.mneeApiToken}`,{method:"GET"});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}catch(t){return void console.error("Failed to fetch config:",t)}}toAtomicAmount(t,e){return Math.round(t*10**e)}async createInscription(t,e,r){const o={p:"bsv-20",op:"transfer",id:r.tokenId,amt:e.toString()};return{lockingScript:p.applyInscription((new l).lock(t,i.fromString(r.approver)),{dataB64:Buffer.from(JSON.stringify(o)).toString("base64"),contentType:"application/bsv-20"}),satoshis:1}}async getUtxos(t,e=["transfer","deploy+mint"]){try{const r=await fetch(`${this.mneeApi}/v1/utxos?auth_token=${this.mneeApiToken}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify([t])});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);const o=await r.json();return e.length?o.filter(t=>e.includes(t.data.bsv21.op.toLowerCase())):o}catch(t){return console.error("Failed to fetch UTXOs:",t),[]}}async broadcast(t){const e=`${this.gorillaPoolApi}/v5/tx`;try{const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/octet-stream"},body:Buffer.from(t.toBinary())}),o=await r.json();return r.ok?{status:"success",txid:o.txid,message:"Transaction broadcast successfully"}:{status:"error",code:r.status.toString(),description:o.error||"Unknown error"}}catch(t){return console.error("Failed to broadcast:",t),{status:"error",code:"UNKNOWN",description:t instanceof Error?t.message:"Unknown error"}}}async fetchBeef(t){const e=await fetch(`${this.gorillaPoolApi}/v5/tx/${t}/beef`);if(404===e.status)throw new Error("Transaction not found");if(200!==e.status)throw new Error(`${e.status} - Failed to fetch beef for tx ${t}`);const r=[...Buffer.from(await e.arrayBuffer())];return a.fromAtomicBEEF(r)}async getSignatures(e,r){try{const s=65;let i;switch(e.format){case"beef":i=a.fromHexBEEF(e.rawtx);break;case"ef":i=a.fromHexEF(e.rawtx);break;default:i=a.fromHex(e.rawtx)}const d=e.sigRequests.flatMap(e=>[r].map(r=>{const a=o.format({sourceTXID:e.prevTxid,sourceOutputIndex:e.outputIndex,sourceSatoshis:e.satoshis,transactionVersion:i.version,otherInputs:i.inputs.filter((t,r)=>r!==e.inputIndex),inputIndex:e.inputIndex,outputs:i.outputs,inputSequence:i.inputs[e.inputIndex].sequence||0,subscript:e.script?c.fromHex(e.script):(new u).lock(r.toPublicKey().toAddress()),lockTime:i.lockTime,scope:e.sigHashType||s}),d=r.sign(n.sha256(a)),p=new o(d.r,d.s,e.sigHashType||s);return{sig:t.toHex(p.toChecksigFormat()),pubKey:r.toPublicKey().toString(),inputIndex:e.inputIndex,sigHashType:e.sigHashType||s,csIdx:e.csIdx}}));return Promise.resolve({sigResponses:d})}catch(t){var s;return console.error("getSignatures error",t),{error:{message:null!=(s=t.message)?s:"unknown",cause:t.cause}}}}async transfer(e,r){try{var n;const i=await this.getConfig();if(!i)throw new Error("Config not fetched");const u=e.reduce((t,e)=>t+e.amount,0);if(u<=0)return{error:"Invalid amount"};const p=this.toAtomicAmount(u,i.decimals),l=d.fromWif(r),f=l.toAddress(),h=await this.getUtxos(f);if(h.reduce((t,e)=>t+(e.data.bsv21.amt||0),0)<p)return{error:"Insufficient MNEE balance"};const g=void 0!==e.find(t=>t.address===i.burnAddress)?0:null==(n=i.fees.find(t=>p>=t.min&&p<=t.max))?void 0:n.fee;if(void 0===g)return{error:"Fee ranges inadequate"};const w=new a(1,[],[],0);let m=0;const I=[];let T="";for(;m<p+g;){const t=h.shift();if(!t)return{error:"Insufficient MNEE balance"};const e=await this.fetchBeef(t.txid);if(!e)return{error:"Failed to fetch source transaction"};I.push(t.owners[0]),T=T||t.owners[0],w.addInput({sourceTXID:t.txid,sourceOutputIndex:t.vout,sourceTransaction:e,unlockingScript:new s}),m+=t.data.bsv21.amt}for(const t of e)w.addOutput(await this.createInscription(t.address,this.toAtomicAmount(t.amount,i.decimals),i));g>0&&w.addOutput(await this.createInscription(i.feeAddress,g,i));const S=m-p-g;S>0&&w.addOutput(await this.createInscription(T,S,i));const E=w.inputs.map((t,e)=>{var r,n;if(!t.sourceTXID)throw new Error("Source TXID is undefined");return{prevTxid:t.sourceTXID,outputIndex:t.sourceOutputIndex,inputIndex:e,address:I[e],script:null==(r=t.sourceTransaction)?void 0:r.outputs[t.sourceOutputIndex].lockingScript.toHex(),satoshis:(null==(n=t.sourceTransaction)?void 0:n.outputs[t.sourceOutputIndex].satoshis)||1,sigHashType:o.SIGHASH_ALL|o.SIGHASH_ANYONECANPAY|o.SIGHASH_FORKID}}),x=w.toHex(),v=await this.getSignatures({rawtx:x,sigRequests:E},l);if(null==v||!v.sigResponses)return{error:"Failed to get signatures"};for(const e of v.sigResponses)w.inputs[e.inputIndex].unlockingScript=(new c).writeBin(t.toArray(e.sig,"hex")).writeBin(t.toArray(e.pubKey,"hex"));const A=t.toBase64(w.toBinary()),O=await fetch(`${this.mneeApi}/v1/transfer?auth_token=${this.mneeApiToken}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({rawtx:A})});if(!O.ok)throw new Error(`HTTP error! status: ${O.status}`);const{rawtx:y}=await O.json();if(!y)return{error:"Failed to broadcast transaction"};const k=t.toArray(y,"base64"),H=a.fromBinary(k);return await this.broadcast(H),{txid:H.id("hex"),rawtx:t.toHex(k)}}catch(t){let e="Transaction submission failed";return t instanceof Error&&(e=t.message,t.message.includes("HTTP error")&&console.error("HTTP error details:",t)),console.error("Failed to transfer tokens:",e),{error:e}}}async getBalance(t){try{const e=await this.getConfig();if(!e)throw new Error("Config not fetched");const r=(await this.getUtxos(t)).reduce((t,e)=>("transfer"===e.data.bsv21.op&&(t+=e.data.bsv21.amt),t),0);return{amount:r,decimalAmount:parseFloat((r/10**(e.decimals||0)).toFixed(e.decimals))}}catch(t){return console.error("Failed to fetch balance:",t),{amount:0,decimalAmount:0}}}async validateMneeTx(e,o){try{const s=a.fromHex(e),i=s.outputs.map(t=>t.lockingScript).map(e=>{const o=e.chunks;for(let e=0;e<=o.length-6;e++){var n,s;if(o[0+e].op===r.OP_DUP&&o[1+e].op===r.OP_HASH160&&20===(null==(n=o[2+e].data)?void 0:n.length)&&o[3+e].op===r.OP_EQUALVERIFY&&o[4+e].op===r.OP_CHECKSIGVERIFY&&33===(null==(s=o[5+e].data)?void 0:s.length)&&o[6+e].op===r.OP_CHECKSIG)return{cosigner:t.toHex(o[5+e].data||[]),address:t.toBase58Check(o[2+e].data||[],[0])}}});return o?o.forEach((e,o)=>{var a;const{address:c,amount:u}=e;if(!i.find(t=>(null==t?void 0:t.cosigner)===this.MNEE_COSIGNER_PROD))throw new Error(`Cosigner not found for address: ${c} at index: ${o}`);if(!i.find(t=>(null==t?void 0:t.address)===c))throw new Error(`Address not found in script for address: ${c} at index: ${o}`);const d=(e=>{var o,s;let i;for(let o=0;o<e.chunks.length;o++){var a;const n=e.chunks[o];o>=2&&3===(null==(a=n.data)?void 0:a.length)&&"ord"==t.toUTF8(n.data)&&e.chunks[o-1].op==r.OP_IF&&e.chunks[o-2].op==r.OP_FALSE&&(i=o+1)}if(void 0===i)return;const c={file:{hash:"",size:0,type:""},fields:{}};for(let a=i;a<e.chunks.length;a+=2){var u,d;const i=e.chunks[a];if(i.op==r.OP_ENDIF)break;if(i.op>r.OP_16)return;const p=e.chunks[a+1];if(p.op>r.OP_PUSHDATA4)return;if(null!=(u=i.data)&&u.length)continue;let l=0;switch(i.op>r.OP_PUSHDATA4&&i.op<=r.OP_16?l=i.op-80:null!=(d=i.data)&&d.length&&(l=i.data[0]),l){case 0:if(c.file.size=(null==(o=p.data)?void 0:o.length)||0,null==(s=p.data)||!s.length)break;c.file.hash=t.toBase64(n.sha256(p.data)),c.file.content=p.data;break;case 1:c.file.type=Buffer.from(p.data||[]).toString()}}return c})(s.outputs[o].lockingScript),p=null==d||null==(a=d.file)?void 0:a.content;if(!p)throw new Error("Invalid inscription content");const l=t.toUTF8(p);if(!l)throw new Error("Invalid inscription content");const f=JSON.parse(l);if("bsv-20"!==f.p)throw new Error(`Invalid bsv 20 protocol: ${f.p}`);if("transfer"!==f.op)throw new Error(`Invalid operation: ${f.op}`);if(f.id!==this.MNEE_TOKEN_ID)throw new Error(`Invalid token id: ${f.id}`);if(f.amt!==Math.round(u*10**this.MNEE_DECIMALS).toString())throw new Error(`Invalid amount: ${f.amt}`)}):i.forEach(t=>{if(t&&t.cosigner!==this.MNEE_COSIGNER_PROD)throw new Error(`Invalid cosigner: ${t.cosigner}`)}),!0}catch(t){return console.error(t),!1}}}class h{constructor(t){this.service=void 0,this.service=new f(t)}async validateMneeTx(t,e){return this.service.validateMneeTx(t,e)}toAtomicAmount(t,e){return this.service.toAtomicAmount(t,e)}async config(){return this.service.getConfig()}async balance(t){return this.service.getBalance(t)}async transfer(t,e){return this.service.transfer(t,e)}}export{h as default};
//# sourceMappingURL=index.modern.js.map
